apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-config
data:
  jwt-cookie-expiry: "1600"
  jwt-refresh-token-expiry: "3600"
---
apiVersion: v1
kind: Secret
metadata:
  name: spring-secret
type: Opaque
data:
  jwt-secret: MzU3NjM4NzkyRjQyM0Y0NDI4NDcyQjRCNjI1MDY1NTM2ODU2NkQ1OTcxMzM3NDM2NzczOTdBMjQ0MzI2NDYyOQ==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-deployment
  labels:
    app: spring
spec:
  replicas: 5
  selector:
    matchLabels:
      app: spring
  template:
    metadata:
      labels:
        app: spring
    spec:
      containers:
      - name: spring
        image: francoisgib/tuto:spring
        imagePullPolicy: Always
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: postgres
        - name: DB_URL
          value: postgres-service

        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: spring-secret
              key: jwt-secret
        - name: JWT_COOKIE_EXPIRY
          valueFrom:
            configMapKeyRef:
              name: spring-config
              key: jwt-cookie-expiry
        - name: JWT_REFRESH_TOKEN_EXPIRY
          valueFrom:
            configMapKeyRef:
              name: spring-config
              key: jwt-refresh-token-expiry
---
apiVersion: v1
kind: Service
metadata:
  name: spring-service
  labels:
    app: spring
spec:
  type: LoadBalancer
  selector:
    app: spring
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-controller
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: ingress-controller
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-service
                port:
                  number: 8080
